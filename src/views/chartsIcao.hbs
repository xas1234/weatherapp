<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Weather | Charts</title>
    <!-- NAUDOJAMAS BOOTSTRAP CSS-->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
  </head>
  <!-- NAUDOJANTIS CSS PUSLAPIO STILIAUS SUKŪRIMAS -->
   <style>
/* SLINKTIES JUOSTOS SPALVOS IR PLOTIS */
::-webkit-scrollbar {
  width: 10px;
}
::-webkit-scrollbar-track {
  background:  rgba(5,6,36,255); 
}
::-webkit-scrollbar-thumb {
  background:  #ffffffd2; 
   outline: 1px solid rgb(8, 8, 24);
}
body {
 /* PUSLAPIO FONO PAVEIKSLIUKAS IR JO KONFIGŪRACIJA */
  background-image:url('../pictures/background.jpg');
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover; 
  /* TEKSTO SPALVA */
 color:white

}
.chart-container {
    width: 1000px; /* DIAGRAMOS PLOTIS IR AUKŠTIS */
    height:800px
}
/* DEŽUTĖS FONAS */
.card { 
    background-color: #232a3196!important;
}
.btn-primary {
    background-color: rgb(8, 8, 24) !important;
    border-color: rgb(255, 255, 255) !important;
}
  </style>
  <body>
    <!-- SUKURIAMAS NARŠYMO JUOSTOS MENIU -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-transparent">
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">  <!-- NAVIGACINĖS NUORODOS -->
            <a class="nav-link" href="/">Home </a>
          </li>
          <li class="nav-item"> <a class="nav-link" href="/database"> Database</a> </li> 
          <li class="nav-item active"> <a class="nav-link" href="/charts/EYVI"> Charts<span class="sr-only">(current)</span></a> </li>
          <li class="nav-item"> <a class="nav-link"  href="/map">Map</a></li>  
        </ul>
      </div>
    </nav> 
    <!-- PUSLAPIO TURINYS -->
    <div class="container">
      <div class="row">
        <div class="col-lg-12 text-center main">
          <div>
            <h1 class="mt-3">Lithuanian Aviation Weather Data Charts</h1>
            <h3>Last 24 Hours In {{chart.all.[0].station}}  </h3> 
            <p class="lead">Choose data by clicking on the buttons</p> 
          </div>
            <div>
            <!-- ICAO MYGTUKAI -->
             <input type="button" class="btn btn-primary" onclick="location.href='/charts/EYVI';" value="EYVI" /> 
             <input type="button" class="btn btn-primary" onclick="location.href='/charts/EYKA';" value="EYKA" /> 
             <input type="button" class="btn btn-primary" onclick="location.href='/charts/EYSA';" value="EYSA" /> 
             <input type="button" class="btn btn-primary" onclick="location.href='/charts/EYPA';" value="EYPA" /> 
             </div> 
         <div class="card" >
<div class="card-body"> <!-- DIAGRAMOS ATNAUJINIMO MYGTUKAI -->
  <button class="btn btn-primary" onclick="updateChartWindDeg()">Wind Direction</button>
  <button class="btn btn-primary" onclick="updateChartWindSpeed()">Wind Speed</button>
  <button class="btn btn-primary" onclick="updateChartTemp()">Temperature</button>
  <button class="btn btn-primary" onclick="updateChartDew()">Dewpoint</button>
  <button class="btn btn-primary" onclick="updateChartHumidity()">Humidity</button>
  <button class="btn btn-primary" onclick="updateChartAltimeter()">Altimeter</button>
  <button class="btn btn-primary" onclick="updateChartVisibility()">Visibility</button>
 
  <canvas id="myChart"></canvas> <!-- DIAGRAMOS ATVAIZDAVIMAS -->
</div>
</div>

<script >
  var ctx = document.getElementById('myChart')
    var chart = new Chart(ctx, {  // DIAGRAMOS OBJEKTAS
        // DIAGRAMMOS TIPAS
        type: 'line',
        //  DIAGRAMOS DUOMENYS
        data: {
            labels: {{{chart.observed}}},
            datasets: [
            
                {
                    label: 'Wind Direction, °',
                    fill: false,
                    backgroundColor: 'rgb(163, 230, 201)',
                    borderColor: 'rgb(163, 230, 201)',
                    data: [{{chart.windDeg}}] // METEOROLOGINIŲ DUOMENŲ MASYVAS
                },
            ],
        },
        options: {
            legend: {
            display: true,
            labels: {
                fontColor: '#FFF',
                fontSize: 18,
            }
        },
  
          scales: {
    yAxes: [{
      gridLines: {
                display:true,
                color: '#FFF',
                lineWidth: 0.3
            },
      scaleLabel: {
        display: true,
        labelString: 'Value, °',
        fontColor: "#FFF",
        fontSize: 18,
       
      },
    ticks: {
                  fontColor: "#FFF", 
                },
    }],
    xAxes: [{
      gridLines: {
                display:true,
                color: '#FFF',
                lineWidth: 0.3
            },
      scaleLabel: {
        display: true,
        labelString: ' UTC, hh/mm',
        fontColor: "#FFF",
        fontSize: 18,
        
      },
    ticks: {
                  fontColor: "#FFF", 
                
                },
    }],

  } 
        }
    })  // FUNKCIJOS ATSAKINGOS UŽ DUOMENŲ ATNAUJINIMA DIAGRAMOS OBJEKTE
     updateChartWindDeg=()=>{
      chart.data.datasets[0].label = "Wind Direction, °"
      chart.data.datasets[0].backgroundColor = 'rgb(163, 230, 201)'
      chart.data.datasets[0].borderColor = 'rgb(163, 230, 201)'
      chart.data.datasets[0].data = [{{chart.windDeg}}]
chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, °"
      chart.update();
    }
   updateChartWindSpeed=()=>{  
      chart.data.datasets[0].label = "Wind Speed, m/s"
      chart.data.datasets[0].backgroundColor = 'rgb(122, 227, 120)'
      chart.data.datasets[0].borderColor = 'rgb(122, 227, 120)'
      chart.data.datasets[0].data = [{{chart.windSpeed}}]
chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, m/s"
      chart.update();
    }
 updateChartTemp=()=>{
  chart.data.datasets[0].label = "Temperature, °C"
      chart.data.datasets[0].backgroundColor = 'rgb(255, 99, 132)'
      chart.data.datasets[0].borderColor = 'rgb(255, 99, 132)'
      chart.data.datasets[0].data = [{{chart.temperature}}]
      chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, °C"
      chart.update();
}
 updateChartDew=()=>{
      chart.data.datasets[0].label = "Dewpoint, °C"
      chart.data.datasets[0].backgroundColor = 'rgb(235, 195, 52)'
      chart.data.datasets[0].borderColor = 'rgb(235, 195, 52)'
      chart.data.datasets[0].data = [{{chart.dewpoint}}]
      chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, °C"
      chart.update();
}
    updateChartHumidity=()=>{
      chart.data.datasets[0].label = "Humidity, %"
      chart.data.datasets[0].backgroundColor = 'rgb(157,197,201)'
      chart.data.datasets[0].borderColor = 'rgb(157,197,201)'
      chart.data.datasets[0].data = [{{chart.humidity}}]
      chart.options.scales.yAxes[0].scaleLabel.labelString = "Probability, %"
      chart.update();
    }
updateChartAltimeter=()=>{
      chart.data.datasets[0].label = "Altimeter, Hg"
      chart.data.datasets[0].backgroundColor = 'rgb(66, 239, 245)'
      chart.data.datasets[0].borderColor = 'rgb(66, 239, 245)'
      chart.data.datasets[0].data = [{{chart.altimeter}}]
      chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, Hg"
      chart.update();
    }
    updateChartVisibility=()=>{
      chart.data.datasets[0].label = "Visibility, m"
      chart.data.datasets[0].backgroundColor = 'rgb(161, 131, 168)'
      chart.data.datasets[0].borderColor = 'rgb(161, 131, 168)'
      chart.data.datasets[0].data = [{{chart.visibility}}]
      chart.options.scales.yAxes[0].scaleLabel.labelString = "Value, m"
      chart.update();
    }
</script>
     <!-- PUSLAPIO PORAŠTĖ -->    
<footer  style="text-align: center;"><p>Made by Lukas Minkevičius AEIf-17, Vilnius Tech, 2021</p></footer>
  </body>
</html>